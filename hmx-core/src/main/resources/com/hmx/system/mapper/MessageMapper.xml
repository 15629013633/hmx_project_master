<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hmx.system.dao.MessageMappper" >

  <resultMap id="BaseResultMap" type="com.hmx.system.entity.Message" >
    <id column="message_id" property="messageId" jdbcType="INTEGER" />
    <id column="status" property="status" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  	<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  	<result column="content" property="content" jdbcType="VARCHAR" />
  	<result column="from_user_id" property="fromUserId" jdbcType="VARCHAR" />
  	<result column="targe_user_id" property="targeUserId" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
      	<if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
          </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List" >
    message_id,status,title,create_date,content,from_user_id,targe_user_id
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hmx.system.entity.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hmx_message
    <!--<where>-->
      <!--<trim suffixOverrides="and">-->
        <!--<if test="title != null">-->
          <!--title like concat("%",#{title},"%")-->
        <!--</if>-->
      <!--</trim>-->
    <!--</where>-->

    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hmx_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hmx_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.hmx.system.entity.MessageExample" >
    delete from hmx_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  
  <insert id="insert" parameterType="com.hmx.system.entity.Message" keyProperty="messageId" useGeneratedKeys="true">
    insert into hmx_message  (message_id,status,title,create_date,content,from_user_id,targe_user_id)
    values (#{messageId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},#{title,jdbcType=VARCHAR},#{createDate,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, #{targeUserId,jdbcType=VARCHAR})
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.hmx.system.entity.Message" keyProperty="messageId" useGeneratedKeys="true"  >
    insert into hmx_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="fromUserId != null" >
        from_user_id,
      </if>
      <if test="targeUserId != null" >
        targe_user_id,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null" >
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="targeUserId != null" >
        #{targeUserId,jdbcType=VARCHAR},
      </if>

    </trim>
  </insert>
  
  <update  id="updateByExample" parameterType="map" >
    update hmx_message
    set
    message_id = #{messageId,jdbcType=INTEGER},
    status = #{status,jdbcType=INTEGER},
    title = #{title,jdbcType=VARCHAR},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    content = #{content,jdbcType=VARCHAR},
    from_user_id = #{fromUserId,jdbcType=VARCHAR},
    targe_user_id = #{targeUserId,jdbcType=VARCHAR},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="countByExample" parameterType="com.hmx.system.entity.MessageExample" resultType="java.lang.Integer" >
    select count(*) from hmx_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update  id="updateByPrimaryKeySelective" parameterType="com.hmx.system.entity.Message" >
    update hmx_message
    <set >
      <if test="messageId != null" >
        message_id = #{messageId,jdbcType=INTEGER} ,
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER} ,
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR} ,
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP} ,
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR} ,
      </if>
      <if test="fromUserId != null" >
        from_user_id = #{fromUserId,jdbcType=VARCHAR} ,
      </if>
      <if test="targeUserId != null" >
        targe_user_id = #{targeUserId,jdbcType=VARCHAR} ,
      </if>
    </set >
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  
  
  <update id="updateByPrimaryKey" parameterType="com.hmx.system.entity.Message" >
    update hmx_message
    set
    message_id = #{messageId,jdbcType=INTEGER},
    status = #{status,jdbcType=INTEGER},
    title = #{title,jdbcType=VARCHAR},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    content = #{content,jdbcType=VARCHAR},
    from_user_id = #{fromUserId,jdbcType=VARCHAR},
    targe_user_id = #{targeUserId,jdbcType=VARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
   
   
</mapper>